#https://leetcode.com/problems/symmetric-tree/
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:
        if not root:
            return True
        return self.isMirror(root,root)
    def isMirror(self,p:TreeNode,q:TreeNode)->bool:
        if not p and not q:
            return True
        if not p or not q:
            return False
        if(p.val==q.val) and self.isMirror(p.left,q.right) and self.isMirror(p.right,q.left):
            return True
        else:
            return False
